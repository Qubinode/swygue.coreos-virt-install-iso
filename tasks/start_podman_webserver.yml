---
# tasks file for swygue.coreos-virt-install-iso#!/usr/bin/env ansible-playbook
- name: check if  Web Server Directory Exists
  stat:
    path: "{{ webserver_directory }}"
  register: webserver_dir

- name: check if podman webserver is Running 
  shell: podman ps | grep {{ podman_webserver }}
  become: yes
  failed_when: false
  register: webserver_running


- name: check if podman webserver is Exists
  shell: podman ps -a | grep {{ podman_webserver }}
  become: yes
  failed_when: false
  changed_when: webserver_status.rc != 0
  register: webserver_status

- name: debug webserver_status
  debug: var=webserver_status

- name: check if podman webserver is already deployed but stopped
  shell: podman ps -a | grep {{ podman_webserver }} | grep Exited
  become: yes
  failed_when: false
  changed_when: webserver_deployed != 0
  register: webserver_deployed

- name: debug webserver_deployed
  debug: var=webserver_deployed 

- name: stop podman webserver if it's running
  shell: podman stop {{ podman_webserver }}
  become: yes
  failed_when: false
  when: webserver_running.rc == 0

- name: remove podman webserver
  shell: podman rm {{ podman_webserver }}
  become: yes
  failed_when: false
  when: webserver_status.rc == 0

- name: Recursively remove web directory 
  file:
    path: "{{ webserver_directory }}"
    state: absent
  when: webserver_dir.stat.exists == True

- name: Create a web directory for container data 
  file:
    path: "{{ webserver_directory }}"
    state: directory
    owner: "{{ admin_user }}"
  when: webserver_dir.stat.exists == False

- name: Create a "{{ ocp4_dependencies_version }}" directory
  file:
    path: "{{ webserver_directory }}/{{ ocp4_dependencies_version }}"
    state: directory
    owner: "{{ admin_user }}"

- name: Create a images directory
  file:
    path: "{{ webserver_directory }}/{{ ocp4_dependencies_version }}/images"
    state: directory
    owner: "{{ admin_user }}"

- name: Create ignition directory
  file:
    path: "{{ dest_ignitions_web_directory }}"
    state: directory
    owner: "{{ admin_user }}"

- name: copy over ignition files to webserver directory
  command: "cp {{ ignition_files_dir }}/{{ item }}.ign {{ dest_ignitions_web_directory }}/{{ item }}.ign"
  with_items:
  - master
  - worker
  - bootstrap

- name: copy over kernel to web directory 
  command: "cp {{ downloaded_files_dir }}/{{ coreos_installer_kernel }} {{ webserver_directory }}/{{ ocp4_dependencies_version }}/images/{{ coreos_installer_kernel }}"

- name: copy over initramfs.img to web directory 
  command: "cp {{ downloaded_files_dir }}/{{ coreos_installer_initramfs }} {{ webserver_directory }}/{{ ocp4_dependencies_version }}/images/{{ coreos_installer_initramfs }}"

- name: copy over coreos_metal_bios to web directory 
  command: "cp {{ downloaded_files_dir }}/{{ coreos_metal_bios }} {{ webserver_directory }}/{{ ocp4_dependencies_version }}/images/{{ coreos_metal_bios }}"

- name: Apply new SELinux file context ignition directory
  command: restorecon -RFv "{{ webserver_directory }}/{{ ocp4_dependencies_version }}/ignitions/"

- name: Apply new SELinux file context to images directory
  command: restorecon -RFv "{{ webserver_directory }}/{{ ocp4_dependencies_version }}/images/"

- name: setup configuration files for podman deployment if not deployed
  copy:
    src: files/webserver
    dest: "{{ coreos_tmp_dir }}"
  become: yes
  when: webserver_status.rc != 0 and webserver_deployed.rc != 0

- name: build podman webserver if not deployed
  command: podman build --format=docker -t webserver .
  become: yes
  args:
    chdir: "{{ coreos_tmp_dir }}/webserver"
    warn: false
  when: webserver_status.rc != 0 and webserver_deployed.rc != 0

- name: run podman webserver if not deployed
  command: podman run -d -v {{ webserver_directory }}:/var/www/html/pub:Z -p 8080:80 --name={{ podman_webserver }} webserver
  become: yes
  args:
    warn: false
  when: webserver_status.rc != 0 and webserver_deployed.rc != 0

- name: start stopped podman webserver
  command: podman start {{ podman_webserver }}
  become: yes
  args:
    warn: false
  when: webserver_deployed.rc == 0
